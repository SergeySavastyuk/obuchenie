"""генератор списков"""
a = [i**2 for i in range(1, 6)]
print(a) # [1, 4, 9, 16, 25]

"""выражения-генератор"""
# Их основное отличие в том, что выражение заключается не в квадратных скобках, а в круглых.
b = (i**2 for i in range(1, 6))
print(b) # <generator object <genexpr> at 0x7fa542ec4200>
print(next(b)) # 1
print(next(b)) # 4

# Генератор – итератор, элементы которого можно итерировать только один раз!!!
# Итератор – объект, который поддерживает функцию next(). Помнит о том, какой элемент будет браться следующим.
# Итерируемый объект – объект, который предоставляет возможность обойти поочередно свои элементы. Может быть преобразован к итератору.

"""можно получить итератор из итерируемого объекта при помощи функции iter"""
s = [1, 2, 3]
my_iter = iter(s)
print(next(my_iter)) # 1
print(next(my_iter)) # 2
print(next(my_iter)) # 3

""" Операция, которые выражения-генераторы НЕ поддерживают """
""" - К выражениям-генераторам нельзя применять функцию len(), т.е. нельзя найти длину этой последовательности.
    - К ним невозможно применить индекс
    - Нельзя опустить скобки при записи выражения, т.к. это тоже приведёт к ошибке.
    - Генераторы можно обходить только один раз."""

"""Необходимо сохранить в переменной lens генератор-выражение, который генерирует длины слов списка words по порядку."""
words = ['feel', 'graduate', 'movie', 'fashionable', 'bacon', 'drop', 'produce', 'acquisition',
         'cheap', 'strength', 'master', 'perception', 'noise', 'strange', 'am']
lens = (len(i) for i in words)
for i in lens:
    print(i)

"""напишем выражение-генератор, который будет генерировать кортеж состоящий из двух элементов: 
названия дня недели и номер дня в году. Ваша задача распечатать на удачу 77 первых дней 2022 года"""
name = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
days = ((i+1,name[(5+i)%7]) for i in range(77))
[print(next(days)) for _ in range(77)]