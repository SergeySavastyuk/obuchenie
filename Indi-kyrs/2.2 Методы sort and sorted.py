
"""sort - это метод только для списка, а sorted - это встроенная функция позволяющая сортировать почти все объекты"""

a = [10,-5,2,0,9,3,-1,-4,6,-5]
b = 'мама мыла раму'
c = ('шла', 'саша', 'по', 'шоссе')
print('метод sort/sorted сортирует объект в порядке возрастания по умолчанию')
print(f'до метода sort {a}')
a.sort() # !!!! Изменяет первоначальный список
print(f'после метода sort {a}')
print('1'*60,end='\n'*2)

print('после применения функции sorted()') # НЕ Изменяет первоначальный список
print(sorted(a))
print(sorted(b))
print(sorted(c))
print('2'*60,end='\n'*2)

print('параметр reverse определяет в каком порядке будеть сортировка')
# c = sorted(c key = function, reverse = False/True)
# a.sort( key = function, reverse = False/True)
print(f'исходая строка: {b}')
print(sorted(b, reverse=True))
print(sorted(b, reverse=False))
print('3'*60,end='\n'*2)


print('аргумент KEY в сортировке, МОЖЕТ содержать встроенную или свою функцию')
# print(sorted(a,key=function))   аргумент KEY МОЖЕТ содержать встроенную или свою функцию
a = [100,-50,20,0,95,31,-154,-4732,6342,-50]
print(f'исходый список: {a}')
print(sorted(a,key=abs),' - сортировка по модулю')  # сортировка по модулю
def f(x):
    return x%10 # сортировка по последней цифре числа по возрастанию
print(sorted(a,key=f), ' - сортировка по последней цифре числа по возрастанию')

def f(x):
    return -(x%10) # сортировка по последней цифре числа по убыванию
print(sorted(a,key=f), ' - сортировка по последней цифре числа по убыванию')

def f(x):
    return x%10, x//10%10 # сортировка по последней цифре, если равны то по предпоследней цифре числа по возрастанию
print(sorted(a,key=f), ' - сортировка по последней цифре, если равны то по предпоследней цифре числа по возрастанию')
print('4'*60,end='\n'*2)

print('аргумент KEY МОЖЕТ содержать методы объектов')
a = ['WW','fff','AAA']
print(f'исходый список: {a}')
print(sorted(a), ' - сортировка по регистру букв')  # сортировка по регистру букв
print(sorted(a,key=str.lower), ' - сначала все буквы станут маленькими, а потом будет сортировка по регистру')
print('5'*60,end='\n'*2)

print('аргумент KEY МОЖЕТ содержать анонимные функции')
a = ['WW 800','ff 45','aaa 43','hhhh 800','k 21', 'aaa 21']
print(f'исходый список: {a}')
print(sorted(a, key=lambda x: int(x.split()[1])),' - разделим по пробелу, потом возьмем второй элемент и превратим его '
                                                 'в число, после по нему будет сортировка по возрастанию')
print(sorted(a, key=lambda x: ( int(x.split()[1]), x.split()[0].lower())),' - двойная сортировка, сначала по числам, '
                                                                          'а если равны, то по алфавиту (из двух ответов для функции делаем кортеж)')
print(sorted(a, key=lambda x: ( int(x.split()[1]), x.split()[0].lower()), reverse=True),' - в обратную сторону')
print(sorted(a, key=lambda x: ( x.split()[0].lower(), int(x.split()[1]))),' - сортировка сначала по букве, потом по числу')
print(sorted(a, key=lambda x: ( int(x.split()[1]))),' - сначала отсортируем по числам по возрастанию')
print(sorted(a, key=lambda x:  x.split()[0].lower(), reverse=True  ),' - потом по строкам в обратной последовательности')
print('6'*60,end='\n'*2)
