"""from <название_модуля> import <имя_объекта>
при импорте модуля - этот модуль запускается, и запускается лишь один раз
для повторного запуска нужно использовать модуль importlib и функцию reload

import importlib
import math_func
import math_func
print(f'Модуль main содержит имя {__name__}')
importlib.reload(math_func)

вывод:
Модуль math_func содержит имя math_func
Модуль main содержит имя __main__
Модуль math_func содержит имя math_func

В атрибуте __name__ у импортируемого файла всегда будет лежать значение, равное названию этого файла.
Но файл, который является основным для всех остальных, при запуске в атрибуте __name__ всегда хранит значение __main__
И зная эту особенность, обычно в файлах ставят следующее условие:
if __name__ == '__main__':
   main_code
для того, чтобы код блока main_code выполнялся только тогда, когда этот модуль был запущен сам, а не когда его импортировали.
то есть, код что пишется после  if __name__ == '__main__':  будет работать только тогда, когда сам этот файл запускают,
но никак не при импорте. При импорте этого файла будет работать код, который выше  if __name__ == '__main__':
"""


""" МОДУЛИ """
print('вывод всех локальных данных')
import pprint   #  модуль нужен для красивого вывода
pprint.pprint(locals()) # locals() выводит все данные

print('_____________________')
print('МОДУЛЬ КАЛЕНДАРЬ')
import calendar
c = calendar.calendar(2000)
print(c)