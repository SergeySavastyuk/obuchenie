
# Напишите программу, которая считывает с клавиатуры два слова (или фразы, неважно),
# после чего вы должны при помощи операции конкатенации сцепить вторую фразу с первой и вывести результат на экран.

print("{1}{0}".format(input(),input())) #Один Два -> ДваОдин

print('{0} сек - это {1} мин. {2} сек.'.format(x := int(input()), x // 60, x % 60))

x,y = 11,98
print(f"{x=}, {y=}") # x=11, y=98
#пробелы будут учтены
print(f"{x  =}, {y= }") # x  =11, y= 98

""" Формат вывода дробной части числа (целые тоже подпадают)  """
c = 1/8 # # ТОчка нужна только для вещественных цифр
print(f'{c:.10f}') # 0.1250000000  число после точки - количество знаков после точки
print(f'{10:10.3f}') #   10.000      число перед точкой - количество всего знаков в строке
# Запись c:.3f говорит, что переменную 'c' нужно представить в вещественном виде (это знак f) и отобразить
# три символа после запятой. Если у переменной c не хватает символов для трех знаков, проставятся нули.
# Если символов в избытке, произойдет округление до третьего символа после запятой.

""" Формат вывода целых чисел """
n = 12345
print(f'{n:8d}') # '   12345'
# Запись n:8d говорит, что переменную n нужно представить в виде целого числа (это знак  d ) и на отображение
# всего числа выделить 8 знаков. Если у переменной n не хватает разрядов до восьми,
# то впереди отображения появятся знаки пробелов.
# Можно вместо пробелов добавить незначащие нули, для этого нужно подписать 0 перед количеством разрядов
print(f'{n:08d}') # 00012345
n = 12345678912345
print(f'{n:,d}') # 12,345,678,912,345
print(f'{n:_d}') # 12_345_678_912_345

""" Выравнивание """
# <	Выравнивает выражение в фигурных скобках по левому краю. У строк такое поведение по умолчанию
# >	Выравнивает выражение в фигурных скобках по правому краю. У чисел такое поведение по умолчанию
# ^	Выравнивает выражение в фигурных скобках по центру
number = 12345.6789
print(f"Число {number = }")    # Число number = 12345.6789
print(f"|{number:25}|")        # |               12345.6789|
print(f"|{number:<25}|")       # |12345.6789               |
print(f"|{number:>25}|")       # |               12345.6789|
print(f"|{number:^25}|")       # |       12345.6789        |
print('-'*25)
text = "Python 3.10"
print(f"Строка {text = }")     # Строка text = 'Python 3.10'
print(f"|{text:25}|")          # |Python 3.10              |
print(f"|{text:<25}|")         # |Python 3.10              |
print(f"|{text:>25}|")         # |              Python 3.10|
print(f"|{text:^25}|")         # |       Python 3.10       |
print(f'|{text.center(25," ")}|') # |       Python 3.10       |


"""пример применения табуляции и смещения"""
print(f'Число\tКвадрат\t\tКуб')
for x in range(1, 11):
   print(f'{x:3d}\t\t{x*x:04d}\t\t{x*x*x:1d}')

"""ЧЕК"""
APPLES = .50
BREAD = 1.50
CHEESE = 2.25
num_apples = 3
num_bread = 10
num_cheese = 6
price_apples = num_apples * APPLES
price_bread = num_bread * BREAD
price_cheese = num_cheese * CHEESE
str_apples = 'Яблоки'
str_bread = 'Хлеб'
str_cheese = 'Сыр'
total = price_bread + price_cheese + price_apples
print(f'{"Список покупок":^30s}')
print('='*30)
print(f'{"=" * 30}')
print(f'{str_apples:10s}{num_apples:10d}\t${price_apples:>5.2f}')
print(f'{str_bread:10s}{num_bread:10d}\t${price_bread:>5.2f}')
print(f'{str_cheese:10s}{num_cheese:10d}\t${price_cheese:>5.2f}')
print(f'{"Total:":>20s}\t${total:>5.2f}')

"""Вводится целое число, необходимо выполнить выравнивание его по центру,
отведя 15 символов под отображение числа. Символом заполнителем должен являться знак дефиса -"""
print(f"{int(input()):-^15d}")